%{
    #include "y.tab.h"
    #import "Common.h"
    
    int yyparse(void);
    int yyerror(char*);
%}

%option yylineno
%option nounput
%option noyywrap

%%
[ \t]+

\n {
    
}

"-" {
    return MINUS;
}

"+" {
    return PLUS;
}

"/"|"*" {
    return MULT_DIV;
}

"="|"<"|">" {
    return LOGIC_OP;
}

"(" {
    return P_OPEN;
}

")" {
    return P_CLOSE;
}

"{" {
    return L_OPEN;
}

"}" {
    return L_CLOSE;
}

"[" {
    return B_OPEN;
}

"]" {
    return B_CLOSE;
}

";" {
    return END_EXP;
}

"when" {
    return _WHEN;
}

"start" {
    return _START;
}

"create" {
    return _CREATE;
}

"as" {
    return _AS;
}

"var"|"list" {
    // Asigna alfa (semantica)
    [Common setAlfa:[NSString stringWithUTF8String:yytext]];
    return _VAR_LIST;
}

"to" {
    return _TO;
}

"say" {
    return _SAY;
}

"for" {
    return _FOR;
}

"load" {
    return _LOAD;
}

"set" {
    return _SET;
}

"scale" {
    return _SCALE;
}

"show"|"hide"|"clear" {
    return _VISIBILITY;
}

"if" {
    return _IF;
}

"else" {
    return _ELSE;
}

"repeat" {
    return _REPEAT;
}

"until" {
    return _UNTIL;
}

"add" {
    return _ADD;
}

"delete" {
    return _DELETE;
}

"at" {
    return _AT;
}

"of" {
    return _OF;
}

"go to" {
    return _GO_TO;
}

"turn" {
    return _TURN;
}

"wait" {
    return _WAIT;
}

"contains" {
    return _CONTAINS;
}

"length" {
    return _LENGTH;
}

"item" {
    return _ITEM;
}

[0-9]+ {
    return CTE_INT;
}

[0-9]+"."[0-9]+ {
    return CTE_FLOAT;
}

'[a-zA-Z0-9]*[ ","|"."|":"|";"|"<"|">"|"{"|"}"|"â€˜"|"="|"/"|"*"|"+"|"-"|"_"|"("|")"|"&"|"^"|"%"|"$"|"#"|"@"|"?"|"!"|"[" ]*' {
    return CTE_STRING;
}

[a-z][a-zA-Z0-9]* {
    // Asigna beta (semantica)
    [Common setBeta:[NSString stringWithUTF8String:yytext]];
    
    return VARIABLE;
}

. {
    yyerror(yytext);
}
%%

// Metodo que muestra los errores.
int yyerror(char *yytext)
{
    [Common setError:[NSString stringWithFormat:@"ERROR (ln:%d) %s", yylineno, yytext]];
    return 1;
}

// Metodo principal de para el preprocesador.
int ext_scanner(const char *archivo)
{
    //**** INICIA RESET VARIABLES
    yylineno = 1;
    yy_buffer_stack = NULL;
    yy_buffer_stack_max = 0;
    yy_c_buf_p = NULL;
    yy_hold_char = '\0';
    yy_init = 0;
    yy_last_accepting_cpos = NULL;
    yy_last_accepting_state = 0;
    yy_n_chars = 0;
    yy_start = 0;
    yyin = NULL;
    yyleng = 0;
    yyout = NULL;
    yytext = NULL;
    //**** FIN RESET VARIABLES

    yyin = fopen(archivo, "r");
    int error = yyparse();
    
    if (error == 1)
    {
        return 1;
    }
    
    return 0;
}